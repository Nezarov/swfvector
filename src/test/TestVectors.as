package test {	import wumedia.vector.VectorShapes;	import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.net.URLLoader;	import flash.net.URLLoaderDataFormat;	import flash.net.URLRequest;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	import flash.utils.getTimer;	/**	 * @author guojian@wu-media.com | guojian.wu@ogilvy.com	 */	public class TestVectors extends Sprite {				public function TestVectors():void {			if (stage) init();			else addEventListener(Event.ADDED_TO_STAGE, init);		}				private var _loader	:URLLoader;				private function init(e:Event = null):void {			removeEventListener(Event.ADDED_TO_STAGE, init);			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;									_loader = new URLLoader();			_loader.dataFormat = URLLoaderDataFormat.BINARY;			_loader.addEventListener(Event.COMPLETE, onLoaded);			_loader.load(new URLRequest("vectorassets.swf"));					}				private function onLoaded(e:Event):void {			var tf:TextField = new TextField();			tf.defaultTextFormat = new TextFormat("Arial", 14);			tf.autoSize = TextFieldAutoSize.LEFT;			tf.selectable = false;			tf.text = "Click to draw";			addChild(tf);						stage.addEventListener(MouseEvent.CLICK, function(ee:Event):void {				var t:Number = getTimer();				VectorShapes.extractFromLibrary(_loader.data, ["circles"]);				trace("parse time:" + ((getTimer() - t)/ 1000) + "s");								t = getTimer();				graphics.clear();				VectorShapes.draw(graphics, "circles", 1.0, mouseX, mouseY);				trace("draw time:" + ((getTimer() - t)/ 1000) + "s");			});		}	}	}