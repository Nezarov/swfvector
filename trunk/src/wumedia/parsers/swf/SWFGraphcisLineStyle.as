/* * Copyright 2009 (c) Guojian Miguel Wu, guojian@wu-media.com. * * Permission is hereby granted, free of charge, to any person * obtaining a copy of this software and associated documentation * files (the "Software"), to deal in the Software without * restriction, including without limitation the rights to use, * copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the * Software is furnished to do so, subject to the following * conditions: * * The above copyright notice and this permission notice shall be * included in all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR * OTHER DEALINGS IN THE SOFTWARE. */package wumedia.parsers.swf {	/**	 * @author guojianwu	 */	public class SWFGraphcisLineStyle extends SWFGraphicsElement {		public function SWFGraphcisLineStyle(data:SWFData = null, hasAlpha:Boolean = true, shapeTagType:uint = 0) {			if ( data ) {				width = data.readUnsignedShort() * 0.05;				color = new SWFColor(data, hasAlpha);			}			_type = "LS";		}		public var width		:Number;		public var color		:SWFColor;				override public function apply(graphics:*, scale:Number = 1, offfsetX:Number = 0.0, offfsetY:Number = 0.0):void {			if ( graphics.hasOwnProperty("lineStyle") ) {				if ( color ) {					graphics.lineStyle(width, color.color, color.alpha);				} else {					graphics.lineStyle();				}			}		}				override public function toString():String {			if ( color ) {				return ["LS", width, color.color].join(", ");			}			return "LS";		}	}}